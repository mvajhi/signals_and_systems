function X = myremovecom(picture, threshold)

% Find the row and column indices of the foreground pixels
[row, col] = find(picture == 1);
POINTS = [row'; col'];
POINTS_NUM = size(POINTS, 2);

% Initialize the first point
initpoint = POINTS(:, 1);
POINTS(:, 1) = [];
POINTS_NUM = POINTS_NUM - 1;
CurrectObject = [initpoint];
t = 1;

% Loop through until all points are processed
while POINTS_NUM > 0
    [POINTS, newPoints] = close_points(initpoint, POINTS);
    newPoints_len = size(newPoints, 2);
    CurrectObject = [CurrectObject, newPoints];
   
    % Check for additional connected points
    while newPoints_len > 0
        initpoint = newPoints(:, 1);
        newPoints(:, 1) = [];
        [POINTS, newPoints2] = close_points(initpoint, POINTS);
        CurrectObject = [CurrectObject, newPoints2];
        newPoints = [newPoints, newPoints2];
        newPoints_len = size(newPoints, 2);
    end
   
    % Store the current object in the final list of objects
    FINALOBJECT{t} = CurrectObject;
    t = t + 1;
    POINTS_NUM = size(POINTS, 2);
    if POINTS_NUM > 0
        initpoint = POINTS(:, 1);
        CurrectObject = initpoint;
    end
end

% Initialize the output matrix
X = zeros(size(picture));

% Loop through all found objects and only keep the ones larger than the threshold
for j = 1:size(FINALOBJECT, 2)
    if size(FINALOBJECT{j}, 2) >= threshold
        for i = 1:size(FINALOBJECT{j}, 2)
            X(FINALOBJECT{j}(1, i), FINALOBJECT{j}(2, i)) = 1;
        end
    end
end

end

function [POINTS,newPoints]=close_points(initpoint,POINTS)

POINTS_NUM=size(POINTS,2);
DIF=repmat(initpoint,1,POINTS_NUM)-POINTS;
DIF=abs(DIF);
ind=find(DIF(1,:)<=1 & DIF(2,:)<=1);
newPoints=POINTS(:,ind);

POINTS(:,ind)=[];
end